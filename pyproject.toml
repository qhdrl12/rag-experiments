[project]
name = "rag-experiments"
version = "0.1.0"
description = "RAG (Retrieval-Augmented Generation) experiments and research toolkit"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "python-dotenv>=1.1.1",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.8",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B"]
ignore = []

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*.py",
    ".venv/*",
    "*/venv/*",
    "__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
